name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      components: ${{ steps.set-matrix.outputs.components }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: set-matrix
        name: Output component builds
        run: |
          echo "components=$(ls ./components/ | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  publish-component:
    name: Publish
    runs-on: ubuntu-22.04
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJSON(needs.setup.outputs.components) }}

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
      REGISTRY_USERNAME: ${{ github.actor }}
      REGISTRY_PASSWORD: ${{ github.token }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Log in to ghcr.io
      #   uses: redhat-actions/podman-login@v1
      #   with:
      #     registry: ${{ env.IMAGE_REGISTRY }}
      #     username: ${{ env.REGISTRY_USERNAME }}
      #     password: ${{ env.REGISTRY_PASSWORD }}

      # - name: Setup Go
      #   uses: actions/setup-go@v4
      #   with:
      #     go-version-file: components/${{ matrix.component }}/go.mod
      #     cache-dependency-path: components/${{ matrix.component }}/go.sum

      # - name: Build and push component
      #   run: |
      #     make push/${{ matrix.component }} IMAGE_TAG="${{ github.ref_name }}"

  docs:
    name: Publish docs
    runs-on: ubuntu-22.04
    needs: publish-component

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup pipenv
        run: pip install pipenv

      - name: Upload docs
        run: make docs

      - name: Upload docs
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: site/

      - name: Deploy docs
        id: deployment
        uses: actions/deploy-pages@v2

  release:
    name: Release
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    needs: publish-component

    steps:
      - name: Make release
        uses: softprops/action-gh-release@v1
